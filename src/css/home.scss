// 전역 변수 선언
$lightgray: rgb(241, 241, 241);
$baige: rgb(235, 235, 194);
$reset0: 0;
$tinySize: 10px;

// @mixin 사용
@mixin flexCenter {
    display: flex;
    justify-content: center;
    align-items: center;
}

// @mixin 안에 반복되는 값을 넣을 수 있음
@mixin flexBetweenCenter {
    @include flexCenter;
    justify-content: space-between;
}

// @mixin안에 변수를 넣을 수 있음, 기본값도 설정 가능
@mixin flexChoose($justifyContent:center) {
    display: flex;
    justify-content: $justifyContent;
    align-items: center;
    @content;
}

html,
body {
    $backgroundColor: #f0ffff; // 지역 변수로 선언
    margin: $reset0;
    padding: $reset0;
    background-color: $backgroundColor;
    box-sizing: border-box;
}

p {
    margin: $reset0;
    padding: $reset0;
}

.wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: $lightgray;

    .header {
        background-color: $baige;
        position: fixed;
        width: 100%;
        padding: $tinySize;
        box-sizing: border-box;
        // @include flexChoose(); // 이 경우, 기본 값인 center가 들어감
        @include flexChoose(space-between){
            background-color: white;
        };
    }

    .container {
        padding: $tinySize;
        padding-top: 60px;
        display: grid;
        grid-template-columns: repeat(1, 1fr);

        .box {
            background-color: black;
            color: white;
            padding: $tinySize;
            margin: $tinySize/2;
            @include flexBetweenCenter;
            min-height: 150px;
        }
        
        @at-root {
            // header와 container안에 공통으로 들어가 있지만 분기 처리를 따로 함. !global을 써도 됨
            .icon {
                width: $tinySize * 3;
                height: $tinySize * 3;
                display: flex;
                justify-content: center;
                align-items: center;
            }
        }
    }
}

@media screen and (min-width: 400px) {
    .container {
        max-width: 600px;
        margin: 0 auto;
    }

    @at-root {

    }
}
